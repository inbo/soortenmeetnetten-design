---
title: "Steekproeftrekking zeggekorfslak"
author: "Toon Westra en Jo Packet"
format: 
  html:
    embed-resources: true
editor: source
date: "2025-09-22"
toc: true
number-sections: true
code-fold: true
lang: nl
execute:
  echo: false
  warning: false
  message: false
---

```{r}
#| label: setup  
#| output: false
#| cache: false

library(tidyverse)
library(INBOtheme)
library(sf)
library(leaflet)
library(leafpop)
library(mapview)
library(DT)
library(units)
library(n2khab)
library(inbodb)
library(git2rdata)
library(grtsdb)
library(kableExtra)
library(units)

conflicted::conflicts_prefer(dplyr::filter)

```

## Data voor opbouw steekproefkader

### Verspreidingsdata

#### Meetnetten.be

```{r}
#| label: query-data-meetnetten
#| eval: FALSE 

con_mn <- connect_inbo_dbase("S0008_00_Meetnetten")

counts_mn <- get_meetnetten_observations(connection = con_mn,
                                       scheme_name = "Zeggekorfslak",
                                       collect = TRUE)

visits_mn <- get_meetnetten_visits(connection = con_mn,
                                       scheme_name = "Zeggekorfslak",
                                       collect = TRUE)

counts_mn %>%
  write_csv2(str_c("../data/aantallen_zeggekorfslak_", Sys.Date(), ".csv"))

visits_mn %>%
  write_csv2(str_c("../data/bezoeken_zeggekorfslak_", Sys.Date(), ".csv"))

locaties_mn <- get_meetnetten_locations(connection = con_mn,
                                       scheme_name = "Zeggekorfslak")

locaties_mn <- locaties_mn$main_locations

locaties_mn <- st_write(locaties_mn, str_c("../data/locaties_zeggekorfslak_", Sys.Date(), ".gpkg"))
```

```{r}
#| label: read-data-meetnetten 

counts_mn <- read_csv2("../data/aantallen_zeggekorfslak_2025-08-26.csv")

visits_mn <- read_csv2("../data/bezoeken_zeggekorfslak_2025-09-01.csv")

locaties_mn <- st_read("../data/locaties_zeggekorfslak_2025-09-01.gpkg", quiet = TRUE)

data_mn <- visits_mn %>%
  select(scheme, visit_id, location, bezoek_status = visit_status, start_date, opmerking = notes) %>%
  left_join(select(counts_mn, visit_id, sample_id, count, life_stage, x, y), by = c("visit_id")) %>%
  mutate(jaar = year(start_date),
         id = str_c("mn_", sample_id)) %>%
  select(id, soort = scheme, jaar, datum = start_date, locatie = location, bezoek_status, opmerking, aantal = count, kleed = life_stage, x, y) %>%
  mutate(nieuwe_locatie = FALSE,
         bron = "meetnetten.be",
         validatie = "goedgekeurd")

data_mn_union <- data_mn %>%
  filter(!is.na(x)) %>%
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(31370) %>%
  group_by(soort) %>%
  summarise(n = n()) %>%
  ungroup()
```

#### Waarnemingen.be

De data uit waarnemingen.be zijn samengevoegd in het bestand `INBODATAVR-439_zegge-korfslak_wbe_VL_DumpTem20250831.csv` (downloaden uit [deze google drive](https://drive.google.com/drive/folders/116iKx0i02a0Rmf4h-_OYLC6UmFvs86fO) folder en bewaren in `data` folder van dit project). De dataset bevat alle waarnemingen van zeggekorfslak t.e.m. 31-08-2025.

```{r}
#| label: read-data-waarnemingen

data_wnm <- read_csv2("../data/INBODATAVR-439_zegge-korfslak_wbe_VL_DumpTem20250831.csv") %>%
  mutate(id = str_c("wnm_", wn_id),
         soort = "Zeggekorfslak",
         datum = as.Date(datum, format = "%d/%m/%Y"),
         jaar = year(datum),
         validatie = ifelse(str_detect(status, "Goedgekeurd"), "goedgekeurd", "onbehandeld")
         ) %>%
  st_as_sf(coords = c("x", "y"), crs = 31370, remove = FALSE) %>%
  st_join(select(st_transform(locaties_mn, crs = 31370), locatie = location)) %>%
  select(id, soort, jaar, datum, locatie, aantal, kleed, x, y, gebied, validatie) %>%
  mutate(nieuwe_locatie = is.na(locatie),
         locatie = ifelse(is.na(locatie),
                          ifelse(gebied != "" & !is.na(gebied), gebied, str_c("nieuw_", id)),
                          locatie)) %>%
  select(-gebied) %>%
  mutate(bron = "waarnemingen.be") %>%
  st_drop_geometry()

data_wnm_remove <- data_wnm %>%
  st_as_sf(coords = c("x", "y"), crs = 31370) %>%
  mutate(distance_mn = drop_units(st_distance(geometry, data_mn_union))) %>%
  semi_join(data_mn, by = c("locatie", "datum")) %>%
  filter(distance_mn < 100)

data_wnm <- data_wnm  %>%
  anti_join(data_wnm_remove, by = "id") %>%
  filter(kleed != "lege schelp of losse klep") %>%
  group_by(bron, soort, id,  jaar, datum, locatie, nieuwe_locatie, x, y, validatie) %>%
  summarise(aantal = sum(aantal)) %>%
  ungroup()

check <- data_wnm %>%
  group_by(id) %>%
  filter(n() > 1)
  
```

```{r, eval = FALSE}
#| label: read-data-inbo

locaties_mn <- locaties_mn %>%
  st_transform(crs = 31370)

data_inbo <- read_sf("../data/Zkorf30112016.shp", crs = 31370) %>%
  mutate(soort = "Zeggekorfslak") %>%
  select(id = OBJECTID, soort, datum = MaxVandatu, aantal = MaxVanaant) %>%
  st_join(select(locaties_mn, locatie = location)) %>%
  mutate(id = str_c("inbo_", id),
         jaar = year(datum),
         bron = "inbo_extra")

data_all_buffer <- data_all_sf %>%
  st_buffer(dist = 25) %>%
  mutate(jaar_wnm = year(datum)) %>%
  select(jaar_wnm)

 data_inbo_remove <- data_inbo %>%
  mutate(distance_mn = round(drop_units(st_distance(geometry, data_all_union)), 0)) %>%
  st_join(data_all_buffer) %>%
  st_drop_geometry() %>%
  filter(jaar == jaar_wnm)
 
 data_inbo <- data_inbo %>%
   anti_join(data_inbo_remove, by = "id") %>%
   filter(year(datum) >= 2000)
```

#### Overzicht

```{r}
#| label: combine-all-data

data_all <- data_mn %>%
  bind_rows(data_wnm)

data_all_sf <- data_mn %>%
  filter(!is.na(x)) %>%
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(31370) %>% 
  bind_rows(data_wnm %>%
              st_as_sf(coords = c("x", "y"), crs = 31370))

status_locatie <- data_all %>%
  group_by(soort, locatie, nieuwe_locatie) %>%
  arrange(jaar, bron, validatie) %>%
  summarise(aantal_individuen_goedgekeurd = sum(aantal * (validatie == "goedgekeurd")),
            aantal_individuen_niet_beoordeeld = sum(aantal * (validatie == "niet beoordeeld")),
            aantal_bezoeken = n_distinct(datum, locatie),
            n_punten = n(),
            locatie_status = ifelse("Geen veldwerk mogelijk - locatie ongeschikt" %in% bezoek_status, "locatie ongeschikt",
                            ifelse("Geen veldwerk mogelijk - locatie ontoegankelijk" %in% bezoek_status, "locatie ontoegankelijk", "locatie bezocht")),
            bron = str_c(unique(bron), collapse = "; "),
            jaar = str_c(unique(jaar), collapse = "; "),
            validatie = sum(validatie == "goedgekeurd") > 0 ) %>%
  ungroup() %>%
  mutate(validatie = ifelse(validatie, "goedgekeurd", "niet beoordeeld")) %>%
  mutate(locatie_status = ifelse(locatie_status != "locatie bezocht", locatie_status,
                                 ifelse(aantal_individuen_goedgekeurd > 0, "aanwezig_goedgekeurd",
                                        ifelse(aantal_individuen_niet_beoordeeld > 0, "aanwezig_niet_beoordeeld",
                                               ifelse(n_punten >= 5, "afwezig", "onvoldoende onderzocht")))))

status_locatie_sf <- locaties_mn %>%
  select(locatie = location) %>%
  left_join(select(status_locatie, locatie, locatie_status), by = "locatie") %>%
  mutate(locatie_status = ifelse(is.na(locatie_status), "niet onderzocht", locatie_status)) %>%
  st_transform(crs = 31370)

```

@fig-all-data geeft een overzicht van de waarnemingen van zeggekorfslak en de status van de locaties die onderdeel uitmaakten van de inhaalslag.

```{r}
#| label: fig-all-data
#| fig-cap: Overzicht waarnemingen zeggekorfslak

aanwezig <- data_all_sf %>%
  filter(aantal > 0)

afwezig <- data_all_sf %>%
  filter(aantal == 0)

mapview(status_locatie_sf, 
        layer.name = "locaties inhaalslag",
        zcol = "locatie_status",
        alpha = 0.5,
        map.types = "OpenStreetMap") +
mapview(aanwezig, 
        layer.name = "zeggekorfslak aanwezig",
        zcol = "bron",
        col.region = c("red", "blue"),
        popup = popupTable(aanwezig, zcol = c("datum", "aantal", "kleed", "bron")),
        alpha = 0.5) +
mapview(afwezig,
        layer.name = "nulwaarnemingen",
        cex = 1, 
        col.regions = "grey",
        alpha = 0.5)

```

```{r}
#| label: write-all-data
#| eval: FALSE  

data_all %>%
  st_write("../output/data_zeggekorfslak.gpkg")
```

### Potentieel leefgebied

#### Defenitie potentieel leefgebied Zeggekorfslak

In het monitoringsprotocol (Packet et al., 2018) wordt het potentieel leefgebied als volg gedefinieerd:

-   selectie polygonen van de Habitatkaart met een van volgende bwk-codes:
    -   `mc` (Grote zeggenvegetaties)
    -   `mr` (Rietland)
    -   `vn` (Nitrofiel alluviaal elzenbos)
    -   `vm` (Elzenbroek)
    -   `md` (Drijfzoom en/of drijftil)
    -   `hfc` (Moerasspirearuigte)
-   selectie van polygonen
    -   met een van volgende bwk-codes:
        -   `mk` (Alkalisch laagveen)
        -   `mp` (Duinpanvegetaties)
        -   `sf` (Vochtig wilgenstruweel op voedselrijke bodem)
        -   `va` (Alluviaal elzen-essenbos)
        -   `vc`(Bronbos)
        -   `hc` (Dotterbloemgrasland)
    -   EN gelegen op een afstand van maximaal 100 meter van een een polygoon met `mc` (Grote zeggenvegetaties)

```{r}
#| label: define-potential-habitat

bwk_code_grote_zegge <- "^mc$"

bwk_codes_leefgebied_strikt <- c("^mc$|^mr$|^vn$|^vm$|^md$|^hfc$")
bwk_codes_leefgebied_extra <- c("^mk$|^mp$|^sf$|^va$|^vc$|^hc$")

bwk_codes_leefgebied_ruim <- c("mc|mr|vn|vm|md|hfc")
bwk_codes_leefgebied_extra_ruim <- c("mk|mp|sf|va|vc|hc")

bwk_codes_leefgebied_variant <- c("mc|^vm$|^md$|^hfc$")
bwk_codes_leefgebied_variant_extra <- c("^mk$|^mp$|^sf$|^va$|^vc$|^hc$|^mr$|^vn$")
```

Op basis van de [Habitatkaart (versie 2023)](https://zenodo.org/records/10353508) maken we een kaart van het leefgebied, door te selecteren op bovenstaande codes, inclusief de verschillende varianten op de codes (bv. naast `mr` ook `k(mr)`, `mrbÂ°`, enz...). @tbl-bwk-pothab geeft een overzicht van alle geselecteerde BWK-codes als we het potentieel leefgebied op die manier afleiden en toont ook de oppervlakte van de polygonen per BWK-code.

```{r}
#| label: potential-habitatmap
#| eval: false

habitatmap <- read_habitatmap()

leefgebied_basis_ruim <- habitatmap %>%
  filter(str_detect(bwk_label, bwk_codes_leefgebied_ruim))

mc_ruim <- habitatmap %>%
  filter(str_detect(bwk_label, "mc")) %>%
  mutate(type_leefgebied = "mc_ruim")

mc_ruim_union <-  mc_ruim %>%
  group_by(type_leefgebied) %>%
  summarise(n_pol = n()) %>%
  ungroup()

leefgebied_extra_ruim <- habitatmap %>%
  filter(str_detect(bwk_label, bwk_codes_leefgebied_extra_ruim)) %>%
  mutate(distance_to_mc = drop_units(st_distance(geometry, mc_ruim_union))) %>%
  filter(distance_to_mc <= 100) %>%
  filter(!polygon_id %in% leefgebied_basis_ruim$polygon_id)

leefgebied_ruim <- bind_rows(leefgebied_basis_ruim,
                             leefgebied_extra_ruim) %>%
  mutate(type_leefgebied = "ruim")

leefgebied_ruim %>%
  st_write("../data/leefgebied_zeggekorfslak.gpkg", "leefgebied_ruim")

rm(habitatmap)
```

```{r}
#| label: read-potential-habitatmap

leefgebied_ruim <- st_read("../data/leefgebied_zeggekorfslak.gpkg", "leefgebied_ruim", quiet = TRUE)

leefgebied_ruim_union <-  leefgebied_ruim %>%
  group_by(type_leefgebied) %>%
  summarise(n_pol = n()) %>%
  ungroup()

```

```{r}
#| label: tbl-bwk-pothab
#| tbl-cap: Overzicht BWK-codes die deeluitmaken van potentieel leefgebied Zeggekorfslak

overzicht_codes <- leefgebied_ruim %>%
  st_drop_geometry() %>%
  separate_rows(bwk_label, sep = " \\+ ") %>%
  select(polygon_id, bwk_label, area_m2) %>%
  filter(str_detect(bwk_label, bwk_codes_leefgebied_ruim) |
           str_detect(bwk_label, bwk_codes_leefgebied_extra_ruim)) %>%
  mutate(code_leefgebied_strikt = str_extract(bwk_label, str_c(bwk_codes_leefgebied_ruim, bwk_codes_leefgebied_extra_ruim, sep = "|"))) %>%
  group_by(code_leefgebied_strikt, bwk_label) %>%
  summarise(n = n(),
            opp_ha = round(sum(area_m2)/10000, 1)) %>%
  arrange(desc(n)) %>%
  ungroup() %>%
  arrange(code_leefgebied_strikt)

  overzicht_codes %>%
    group_by(code_leefgebied_strikt) %>%
    mutate(bwk_label2 = str_replace(bwk_label,  "\\*", "\\\\*")) %>%
    summarise(bwk_codes = str_c(str_c(bwk_label2, " (", opp_ha, " ha)"), collapse = "; ")) %>%
    select("bwk-code hoofdgroep" = code_leefgebied_strikt, "geselecteerde bwk-codes uit Habitatkaart en oppervlakte" = bwk_codes) %>%
    kable() %>%
    kable_styling() %>%
    collapse_rows(1)
```

Na evaluatie van bovenstaande tabel en op basis van expertkennis verfijnen we de afbakening van het leefgebied als volgt:

-   enkel voor `mc` selecteren we alle varianten/combinaties uit de tweede kolom, voor de overige codes selecteren we enkel de 'zuivere' variant uit de eerste kolom
-   `mr` (Rietland) en `vn` (Nitrofiel alluviaal elzenbos) selecteren we enkel als die gelegen zijn op een afstand van een polygoon met `mc` (of een variant die mc bevat)

```{r}
#| label: potentieel-leefgebied-variant
#| eval: false

habitatmap <- read_habitatmap()

selectie_leefgebied_variant_basis <- leefgebied_basis_ruim %>%
  st_drop_geometry() %>%
  separate_rows(bwk_label, sep =  " \\+ ") %>%
  filter(str_detect(bwk_label, bwk_codes_leefgebied_variant)) %>%
  select(polygon_id, bwk_label)

leefgebied_variant_basis <- habitatmap %>%
  filter(polygon_id %in% selectie_leefgebied_variant_basis$polygon_id)

selectie_leefgebied_variant_extra <- habitatmap %>%
  st_drop_geometry() %>%
  separate_rows(bwk_label, sep =  " \\+ ") %>%
  filter(str_detect(bwk_label, bwk_codes_leefgebied_variant_extra)) %>%
  select(polygon_id, bwk_label)

leefgebied_variant_extra <- habitatmap %>%
  filter(polygon_id %in% selectie_leefgebied_variant_extra$polygon_id) %>%
  filter(!polygon_id %in% leefgebied_variant_basis$polygon_id) %>%
  mutate(distance_to_mc = drop_units(st_distance(geometry, mc_ruim_union))) %>%
  filter(distance_to_mc <= 100)

leefgebied_variant <- bind_rows(leefgebied_variant_basis,
                                   leefgebied_variant_extra) %>%
  mutate(type_leefgebied = "basis + extra variant")

st_write(leefgebied_variant, "../data/leefgebied_zeggekorfslak.gpkg", "leefgebied_variant")

# leefgebied_variant_polygons <-  leefgebied_variant_union %>%
#   st_cast("POLYGON")

rm(habitatmap)
```

```{r}
#| label: read-potentieel-leefgebied-variant

leefgebied_variant <- st_read("../data/leefgebied_zeggekorfslak.gpkg", "leefgebied_variant", quiet = TRUE)

leefgebied_variant_union <-  leefgebied_variant %>%
  group_by(type_leefgebied) %>%
  summarise(n_pol = n()) %>%
  ungroup()
```

```{r}
habitatmap_stdized <- read_habitatmap_stdized()

habitatmap_rbbmc <- habitatmap_stdized$habitatmap_types %>%
  filter(type == "rbbmc") 

leefgebied_rbbmc <- habitatmap_stdized$habitatmap_polygons %>%
  inner_join(habitatmap_rbbmc, by = "polygon_id") %>%
  mutate(type_leefgebied = "rbbmc")

leefgebied_rbbmc_union <-  leefgebied_rbbmc %>%
  group_by(type_leefgebied) %>%
  summarise(n_pol = n()) %>%
  ungroup()

# st_write(leefgebied_rbbmc, "../output/inhaalslag_zeggekorfslak.gpkg", "rbbmc", driver = "gpkg", delete_layer = TRUE)

rm(habitatmap_stdized)
```

## GRTS grid

We maken een 250 m x 250 m grid met een unieke grts-ranking voor elke gridcel.

```{r}
#| label: make-grts-grid

cellsize <- 250

bbox_sampleframe <- read_admin_areas(dsn = "flanders") %>%
  st_buffer(dist = cellsize * 2) %>%
  st_bbox()

xmin <- floor(bbox_sampleframe$xmin/1000)*1000 - cellsize / 2
ymin <- floor(bbox_sampleframe$ymin/1000)*1000 - cellsize / 2
xmax <- ceiling(bbox_sampleframe$xmax/1000)*1000 + cellsize / 2
ymax <- ceiling(bbox_sampleframe$ymax/1000)*1000 + cellsize / 2

# we add a row or a column when we have an odd number of rows or columns
# otherwise the grid created with grtsdb package is not correct (point coordinates are not in the center of the cell)

xres <- (xmax - xmin) / cellsize
yres <- (ymax - ymin) / cellsize

is_odd <- function(x){round(x/2) != x/2}

if (is_odd(xres)) {
  xmin = xmin - cellsize
}

if (is_odd(yres)) {
  ymin = ymin - cellsize
}

xres <- (xmax - xmin) / cellsize
yres <- (ymax - ymin) / cellsize

bbox <- rbind(
  x = c(xmin, xmax),
  y = c(ymin, ymax)
)

db <- connect_db()
  
add_level(bbox = bbox, cellsize = cellsize, grtsdb = db)
 
full_grid <- extract_sample(
  grtsdb = db, samplesize = 1000000, bbox = bbox, cellsize = cellsize
)

steekproefkader_hok <- full_grid %>%
  mutate(geom = str_c("POLYGON ((", x1c - cellsize / 2, " ", x2c - cellsize / 2, 
                                ",", x1c + cellsize / 2, " ", x2c - cellsize / 2,
                                ",", x1c + cellsize / 2, " ", x2c + cellsize / 2,
                                ",", x1c - cellsize / 2, " ", x2c + cellsize / 2,
                                ",", x1c - cellsize / 2, " ", x2c - cellsize / 2, "))")) %>%
  st_as_sf(wkt = "geom", crs = 31370)

```

De steekproef is reproduceerbaar op basis van de database `grts.sqlite`.

## Kenmerken per hok

### Aanwezigheid van zeggekorfslak

Voor elk hok van het GRTS-grid bepalen we:

-   totaal aantal individuen van zeggekorfslak
-   jaar van meest recente waarneming van minstens 1 individu
-   jaar van meest recente nulwaarneming
-   aantal punten met waarneming van minstens 1 individu
-   aantal punten met nulwaarneming

```{r}
#| label: aanwezigheid-hok

aanwezigheid_hok <- data_all_sf %>%
  st_join(steekproefkader_hok) %>%
  st_drop_geometry() %>%
  mutate(aanwezigheid = ifelse(aantal > 0, "aanwezig", "afwezig")) %>%
  group_by(ranking, soort) %>%
  mutate(tot_aantal = sum(aantal),
         locatie = str_c(unique(locatie), collapse = ";")) %>%
  ungroup() %>%
  group_by(ranking, soort, locatie, tot_aantal, aanwezigheid) %>%
  summarise(jaar_max = max(jaar),
            n_points = n(),
            bron = str_c(unique(bron), collapse = "; ")) %>%
  ungroup()

aanwezigheid_hok_wide <- aanwezigheid_hok %>%
  pivot_wider(names_from = aanwezigheid,
              values_from = c(jaar_max, n_points, bron))

steekproefkader_hok_aanwezig <- steekproefkader_hok %>%
  left_join(aanwezigheid_hok_wide, by = "ranking") %>%
  mutate(selectie_aanwezigheid = ifelse(tot_aantal <= 0, FALSE,
                                        ifelse(is.na(jaar_max_afwezig), TRUE,
                                               ifelse((jaar_max_afwezig - jaar_max_aanwezig) > 6 & n_points_afwezig >= 3, FALSE, TRUE))))

```

### Potentieel leefgebied per hok

We berekenen binnen elk hok de proportie van:

-   potentieel leefgebied (variant)
-   rbb mc

```{r}
#| label: leefgebied-hok

leefgebied_hok_inters <- steekproefkader_hok %>%
  st_intersection(leefgebied_variant) %>%
  mutate(area = st_area(geom)) %>%
  st_drop_geometry()

leefgebied_hok <- leefgebied_hok_inters %>%
  group_by(ranking) %>%
  summarise(opp_leefgebied_ha = sum(drop_units(area)) / 10000) %>%
  ungroup() %>%
  mutate(prop_leefgebied = round(opp_leefgebied_ha / (2.50 * 2.50), 3)) %>%
  filter(prop_leefgebied > 0.01)

rbbmc_hok_inters <- steekproefkader_hok %>%
  st_intersection(leefgebied_rbbmc) %>%
  mutate(opp_rbbmc_ha = drop_units(st_area(geom)) * phab/100)  %>%
  st_drop_geometry()

rbbmc_hok <- rbbmc_hok_inters %>%
  group_by(ranking) %>%
  summarise(opp_rbbmc_ha = sum(opp_rbbmc_ha) / 10000) %>%
  ungroup() %>%
  mutate(prop_rbbmc = round(opp_rbbmc_ha / (2.50 * 2.50), 3)) %>%
  filter(prop_rbbmc > 0.01)

steekproefkader_kenm <- steekproefkader_hok_aanwezig %>%
  left_join(leefgebied_hok, by = "ranking") %>%
  left_join(rbbmc_hok, by = "ranking") %>%
  filter(!(is.na(opp_leefgebied_ha) & is.na(soort)))

```

### Status locatie inhaalslag

De status van de locaties (zoekgebieden) in de inhaalslag heeft volgende categorieÃ«n:

-   locatie ongeschikt
-   locatie ontoegankelijk
-   zeggekorfslak aanwezig
-   zeggekorfslak afwezig (nulwaarnemingen voor minstens 5 punten)
-   locatie onvoldoende onderzocht (minder dan 5 nulwaarnemingen)
-   locatie niet onderzocht (geen waarnemingen)

Voor elk hok bepalen we de status van de inhaalslag locatie waarmee het overlapt.

```{r}

#| label: inhaalslag-status-hok

status_hok <- steekproefkader_hok %>%
  st_join(status_locatie_sf, largest = TRUE) %>%
  st_drop_geometry() %>%
  filter(!is.na(locatie)) %>%
  select(ranking, locatie_inhaalslag = locatie, locatie_status)

provinces <- read_admin_areas(dsn = "provinces") %>%
  select(provincie = name)

ecoregions <- read_ecoregions() %>%
  select(ecoregio = region_name)

steekproefkader_kenm <- steekproefkader_hok_aanwezig %>%
  left_join(leefgebied_hok, by = "ranking") %>%
  left_join(rbbmc_hok, by = "ranking") %>%
  left_join(status_hok, by = "ranking") %>%
  filter(!(is.na(opp_leefgebied_ha) & is.na(soort))) %>%
  st_join(provinces, largest = TRUE) %>%
  st_join(ecoregions, largest = TRUE)

```

## Selectie hokken in steekproefkader

Vooraleer we een steekproef trekken moeten we bepalen welke hokken tot het steekproefkader behoren. Hierbij moeten we een afweging maken tussen:

-   voldoende trefkans per hok
-   voldoende representativiteit van het steekproefkader (er is nog een groot deel van het potentieel leefgebied niet onderzocht, maar de trefkans is er laag)

Als basis selecteren we de hokken met recente aanwezigheid van zeggekorfslak. Meer concreet gaat het om alle hokken met effectieve waarnemingen van zeggekorfslak sinds 2008.

Sommige hokken bevatten naast effectieve waarnemingen ook nulwaarnemingen. Deze hokken worden niet weerhouden indien:

-   er minstens 3 nulwaarnemingen in het hok liggen
-   EN, de meest recente effectieve waarneming minstens 6 jaar ouder is dan de meest recente nulwaarneming

Naast de hokken met effectieve waarnemingen van zeggekorfslak, kunnen volgende 'uitbreidingen' van het steekproefkader overwogen worden:

-   uitbreiding 1:
    -   hokken in inhaalslag locatie met aanwezigheid van de soort, maar geen (nul)waarnemingen in het hok zelf (zeggekorfslak werd dus wel waargenomen in een ander hok binnen de inhaalslag locatie)
    -   EN minstens 10 % rbb mc of 75% leefgebied (om voldoende trefkans te verzekeren)
-   uitbreiding 2:
    -   hokken in niet of onvoldoende onderzochte inhaalslag locaties
    -   EN minstens 20 % rbb mc (om voldoende trefkans te verzekeren)

```{r}
#| label: selectie-hok-steekproefkader

steekproefkader_basis <- steekproefkader_kenm %>%
  filter(selectie_aanwezigheid) %>%
  mutate(type_selectie = "basis")

steekproefkader_uitbreiding1 <- steekproefkader_kenm %>%
  filter(locatie_status == "aanwezig_goedgekeurd", 
         prop_rbbmc >= 0.05 ) %>%
  filter(!ranking %in% steekproefkader_basis$ranking) %>%
  filter(is.na(n_points_afwezig) | n_points_afwezig < 1) %>%
  mutate(type_selectie = "uitbreiding1")

steekproefkader_uitbreiding2 <- steekproefkader_kenm %>%
  filter(locatie_status %in% c("niet onderzocht", "onvoldoende onderzocht") | is.na(locatie_status), 
         prop_rbbmc >= 0.20) %>%
  filter(!ranking %in% steekproefkader_basis$ranking) %>%
  filter(!ranking %in% steekproefkader_uitbreiding1$ranking) %>%
  filter(is.na(n_points_afwezig) | n_points_afwezig < 1) %>%
  mutate(type_selectie = "uitbreiding2")

N <- 60

steekproefkader_select <- steekproefkader_basis %>%
  bind_rows(steekproefkader_uitbreiding1) %>%
  bind_rows(steekproefkader_uitbreiding2)
```

@fig-steekproefkader toont een overzicht van de selectie van de hokken, de puntlocaties met waarnemingen van minstens 1 individu en polygonen met potentieel leefgebied.

```{r}
#| label: fig-steekproefkader
#| fig.cap: Overzicht hokken steekproefkader

mapview(steekproefkader_select,
        layer.name = "selectie hokken",
        zcol = "type_selectie",
        map.types = "OpenStreetMap") +
mapview(aanwezig, 
      layer.name = "zeggekorfslak aanwezig",
      cex = 2,
      col.region = "black",
      popup = popupTable(aanwezig, zcol = c("datum", "aantal", "kleed", "bron")),
      alpha = 0.5) +
# mapview(leefgebied_variant,
#         alpha = 0.5,
#         color = "white") +
mapview(leefgebied_rbbmc,
        col.region = "darkgreen",
        color = "white",
        alpha = 0.5)
  
```

@tbl-overzicht-sk geeft het aantal hokken in het steekproefkader per type selectie en het aantal hokken in de steekproef (indien beide uitbreidingen zouden weerhouden worden).

```{r}
#| label: tbl-overzicht-sk
#| tbl-cap: Aantal hokken in steekproefkader

overzicht_hokken_steekproefkader <- steekproefkader_select %>%
  st_drop_geometry() %>%
  group_by(type_selectie) %>%
  summarise(n_steekproefkader = n()) %>%
  ungroup()

overzicht_hokken_steekproefkader %>%
  kable() %>%
  kable_styling()

```

Na manuele controle van de hokken in 'uitbreiding 2' beluiten we dat deze hokken een zeer lage kans op aanwezigheid van zeggekorfslak hebben. We weerhouden dus enkele de 'basis' en 'uitbreiding 1' hokken voor de selectie van de steekproef.

```{r}
#| label: select-sk

 steekproefkader_select <- steekproefkader_select %>%
  filter(type_selectie %in% c("basis", "uitbreiding1")) %>%
  mutate(ranking_rel = rank(ranking),
         steekproef = ranking_rel <= N)

leefgebied_steekproefkader <- leefgebied_variant %>%
  st_join(steekproefkader_select, largest = TRUE) %>%
  filter(!is.na(ranking_rel)) %>%
  select(polygon_id, bwk_label, distance_to_mc)

rbb_mc_steekproefkader <- leefgebied_rbbmc %>%
  st_join(steekproefkader_select, largest = TRUE) %>%
  filter(!is.na(ranking_rel)) %>%
  select(polygon_id, description_orig, type, phab)

# leefgebied_steekproefkader %>%
#   st_write(dsn = "../output/meetnet_zeggekorfslak.gpkg", "potentieel_leefgebied", delete_layer = TRUE)
# 
# rbb_mc_steekproefkader %>%
#   st_write(dsn = "../output/meetnet_zeggekorfslak.gpkg", "grote_zeggevegetaties", delete_layer = TRUE)

# aanwezig %>%
#   st_write(dsn = "../output/meetnet_zeggekorfslak.gpkg", "zeggekorfslak_aanwezig", delete_layer = TRUE)
```

## Steekproef

```{r}
#| label: strata-ecoregio

overzicht_ecoregio <- steekproefkader_select %>%
  st_drop_geometry() %>%
  mutate(tot_steekproefkader = n(),
         tot_steekproef = sum(steekproef)) %>%
  group_by(ecoregio) %>%
  summarise(n_steekproefkader = n(),
            n_steekproef = sum(steekproef),
            prop_steekproefkader = round(n() / 100, 3),
            prop_steekproef = round(sum(steekproef) / 60, 3),
            n_steekproef_stratificatie = round(n_steekproefkader * 60/100)) %>%
  ungroup() 

samplesize_ecoregio <- overzicht_ecoregio %>%
  select(ecoregio, n_strata = n_steekproef_stratificatie)

steekproefkader_select <- steekproefkader_select %>%
  left_join(samplesize_ecoregio, by = "ecoregio") %>%
  group_by(ecoregio) %>%
  mutate(ranking_rel_ecoregio = rank(ranking),
         steekproef_stratified = ranking_rel_ecoregio <= n_strata) %>%
  ungroup()
```

We selecteren 60 hokken die in een meetcyclus van 6 jaar worden geteld.

We willen met de steekproef ook een goed zicht krijgen op de verspreiding van de soort. Daarom passen we een gestratificeerde steekproef toe op basis van de ecoregio's. We selecteren een aantal hokken per ecoregio op basis van de relatieve ranking binnen de ecoregio. De steekproefgrootte per ecoregio is proportioneel met het aantal hokken per ecoregio in het steekproefkader.

@tbl-overzicht-ecoregio toont de steekproefgrootte per ecoregio met en zonder stratificatie.

```{r}
#| label: tbl-overzicht-ecoregio
#| tbl-cap: Aantal geselecteerde hokken met en zonder stratificatie volgens ecoregio

overzicht_ecoregio %>%
  select(ecoregio, n_steekproefkader, n_steekproef, n_steekproef_stratificatie) %>%
  kable() %>%
  kable_styling()
```

Als we hokken selecteren volgens de relatieve ranking binnen de ecoregio zien we dat in sommige gebieden relatief veel hokken geselecteerd worden. Anderzijds zijn er soms sterk geÃ¯soleerde hokken die niet in de steekproef voorkomen, maar wel van belang zijn om goed zicht te krijgen op de verspreiding.

Daarom doen we volgende (beperkte) manuele optimalisatie om nog een iets betere spreiding van de steekproef te bekomen:

-   Ecoregio van de zuidoostelijke heuvelzone

    -   Uit: Sint-Joris-Winge - Walenbos (relatieve ranking = 8)
    -   Uit: Huldenberg - Laanvallei - Onderbos (relatieve ranking = 12)
    -   In: Assent - Paepenbroek (relatieve ranking = 17)
    -   In: Steenputbeek (relatieve ranking = 25)
    
-   Ecoregio van de zuidwestelijke heuvelzone

    -   Uit: Boelaremeersen (relatieve ranking = 2)
    -   In: Ninove - Dendervallei (relatieve ranking = 19)

-   Ecoregio van de krijt-leemgebieden

    -   Uit: Rijkhoven - Molenbeemden (relatieve ranking = 9)
    -   Uit: De Kevie (relatieve ranking = 8)
    -   In: Zammelen (relatieve ranking = 16)
    -   In: Wintershoven (relatieve ranking = 17)
    
-   Ecoregio van de polders en de getijdenschelde

    -   Uit: Weert Briel (relatieve ranking = 7)
    -   In: Sint-Onolfspolder (relatieve ranking = 18)  

```{r}
steekproefkader_select <- steekproefkader_select %>%
  mutate(steekproef_finaal = steekproef_stratified,
         steekproef_finaal = ifelse(ecoregio == "Ecoregio van de zuidoostelijke heuvelzone",
                                    ifelse(ranking_rel_ecoregio %in% c(8, 12), FALSE,
                                           ifelse(ranking_rel_ecoregio %in% c(17, 25), TRUE, steekproef_finaal)),
                                    steekproef_finaal),
         steekproef_finaal = ifelse(ecoregio == "Ecoregio van de krijt-leemgebieden",
                                    ifelse(ranking_rel_ecoregio %in% c(8,9), FALSE,
                                           ifelse(ranking_rel_ecoregio %in% c(16,17), TRUE, steekproef_finaal)),
                                    steekproef_finaal),
         steekproef_finaal = ifelse(ecoregio == "Ecoregio van de zuidwestelijke heuvelzone",
                                    ifelse(ranking_rel_ecoregio %in% c(2), FALSE,
                                           ifelse(ranking_rel_ecoregio %in% c(19), TRUE, steekproef_finaal)),
                                    steekproef_finaal),
         steekproef_finaal = ifelse(ecoregio == "Ecoregio van de polders en de getijdenschelde",
                                    ifelse(ranking_rel_ecoregio %in% c(7), FALSE,
                                           ifelse(ranking_rel_ecoregio %in% c(18), TRUE, steekproef_finaal)),
                                    steekproef_finaal))
       
```
```{r, eval = FALSE}
steekproefkader_select %>%
  select(locatie, ecoregio, ranking, ranking_rel_ecoregio, type_selectie, tot_aantal, jaar_max_aanwezig, prop_leefgebied, prop_rbbmc, bron_aanwezig, locatie_inhaalslag, locatie_status, steekproef_finaal) %>%
  st_write(dsn = "../output/meetnet_zeggekorfslak.gpkg", "steekproefkader", delete_layer = TRUE, quiet = TRUE)
```

@fig-verschil toont het verschil in de geselecteerde hokken als er gebruik gemaakt wordt van stratificatie volgens ecoregio.

```{r}
#| label: fig-verschil
#| fig.cap: Verschl in geselecteerde hokken bij gebruik van stratificatie volgens ecoregio

steekproefkader_select_verschil <- steekproefkader_select %>%
  filter(steekproef != steekproef_finaal) %>%
  mutate(verschil = ifelse(steekproef_finaal, "Selectie met stratificatie + manuele correctie", "Selectie zonder stratificatie")) %>%
  select(locatie, ecoregio, ranking_rel, ranking_rel_ecoregio, verschil) %>%
  st_centroid()

steekproefkader_select_ongewijzigd <- steekproefkader_select %>%
  filter(steekproef == steekproef_finaal) %>%
  filter(steekproef) %>%
  st_centroid()

steekproefkader_overig <- steekproefkader_select %>%
  filter(!steekproef) %>%
  filter(!steekproef_finaal) %>%
  st_centroid()

steekproefkader_select_verschil %>%
  mapView(zcol = "verschil", layer.name = "Verschil steekproef"
          ) +
  mapview(steekproefkader_select_ongewijzigd, layer.name = "Steekproef ongewijzigd",
          cex = 3, col.regions = "red", alpha.regions = 0.4) +
  mapview(steekproefkader_overig, layer.name = "Niet geselecteerd",
          cex = 3, col.regions = "blue", alpha.regions = 0.4)
```

```{r}
#| label: tbl-overzicht-s
#| tbl-cap: Aantal hokken in steekproef

steekproef <- steekproefkader_select %>%
  filter(steekproef_finaal) %>%
  mutate(naam = ifelse(!is.na(locatie_inhaalslag), locatie_inhaalslag, locatie)) %>%
  group_by(ecoregio) %>%
  mutate(n_ecoregio = n(),
         ranking_rel_ecoregio = rank(ranking),
         panel = ifelse(ranking_rel_ecoregio <= floor((n() / 2)), 1,
                        ifelse(ranking_rel_ecoregio > ceiling((n() / 2)), 2,
                               NA))) %>%
  ungroup() %>%
  mutate(pannel_missing = is.na(panel)) %>% #indien oneven hokken in ecoregio, kan middelste hok nog niet toegevoegd worden aan panel
  group_by(pannel_missing) %>%
  mutate(panel_add = ceiling(rank(ranking) * 2 / n())) %>% # alle middelste hokken kennen we toe aan panel op basis van relatieve ranking
  ungroup() %>%
  mutate(panel = ifelse(pannel_missing, panel_add, panel)) %>%
  arrange(ecoregio, ranking) %>%
  select(naam, ecoregio, ranking, ranking_rel_ecoregio, panel, type_selectie, tot_aantal)

check <- steekproef %>%
  group_by(panel) %>%
  summarise(n = n()) %>%
  ungroup()

steekproef %>%
  st_drop_geometry() %>%
  group_by(type_selectie, ecoregio) %>%
  summarise(steekproef_n = n()) %>%
  ungroup() %>%
  kable() %>%
  kable_styling()
```
```{r, eval = FALSE}
steekproef %>%
  st_write(dsn = "../output/meetnet_zeggekorfslak.gpkg", "steekproef", delete_layer = TRUE, quiet = TRUE)
```



@fig-steekproef toont de hokken in de steekproef. 
De figuur toont ook het potentieel leefgebied binnen de hokken van het steekproefkader.

```{r}
#| label: fig-steekproef
#| fig.cap: Overzicht hokken steekproef

steekproefkader_niet <- steekproefkader_select %>%
  filter(!steekproef_finaal)

steekproef <- steekproef %>%
  mutate(periode = ifelse(panel == 1, "2025-2027", "2028-2030"))

mapview(steekproef,
        zcol = "type_selectie",
        map.types = "OpenStreetMap") +
mapview(steekproefkader_niet, alpha.regions = 0.2, layer.name = "niet geselecteerde hokken") +
mapview(aanwezig, 
      layer.name = "zeggekorfslak aanwezig",
      cex = 2,
      col.region = "black",
      popup = popupTable(aanwezig, zcol = c("datum", "aantal", "kleed", "bron")),
      alpha = 0.5) +
mapview(rbb_mc_steekproefkader,
        col.region = "green",
        alpha.region = 0.3) +
mapview(leefgebied_steekproefkader,
        col.region = "darkgreen",
        alpha.region = 0.3)
```

De steekproef verdelen we in 2 groepen (op basis van de relatieve ranking):

+ de eerste groep van 30 hokken worden in de periode 2025-2027 bemonsterd
+ de tweede groep van 30 hokken worden in de periode 2028-2030 bemonsterd

```{r}
steekproef_meetnetten <- st_read(dsn = "../output/meetnet_zeggekorfslak.gpkg", "steekproef")

steekproef_meetnetten <- steekproef_meetnetten %>%
  st_transform(crs = 4326) %>%
  select(panel, naam = naam_meetnetten)

steekproef_meetnetten %>%
  st_write("../output/add_locaties_zeggekorfslak_2025-10-02.shp")
```

